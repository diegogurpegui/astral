(()=>{var e={37302:(e,t,n)=>{"use strict";var r={};n.r(r),n.d(r,{activateSub:()=>f,close:()=>p,deactivateSub:()=>N,publish:()=>S,setPort:()=>O,setRelays:()=>T,subEvent:()=>v,subFeed:()=>g,subTag:()=>b,subUser:()=>l,subUserFollowers:()=>E,subUserFollows:()=>u,subUserNotes:()=>d,subUserProfile:()=>c,subUserTags:()=>_});n(40702),n(46727),n(84641),n(83269);const a=new Worker(new URL(n.p+n.u(176),n.b)),s={};function o(e,t){let n=e+" "+Math.random().toString().slice(-4);return a.postMessage(JSON.stringify({id:n,name:e,args:t})),new Promise(((e,t)=>{s[n]={resolve:e,reject:t}}))}function i(e,t){let n=e+" "+Math.random().toString().slice(-4);return console.debug("sub",n,t),a.postMessage(JSON.stringify({id:n,name:e,args:t,sub:!0})),{update(...t){a.postMessage(JSON.stringify({id:n,name:e,args:t,sub:!0}))},cancel(){a.postMessage(JSON.stringify({id:n,sub:!0,cancel:!0})),delete s[n]}}}function l(e){return i("subUser",[e])}function d(e){return i("subUserNotes",[e])}function c(e){return i("subUserProfile",[e])}function u(e){return i("subUserFollows",[e])}function E(e){return i("subUserFollowers",[e])}function _(e){return i("subUserTags",[e])}function b(e,t){return i("subTag",[e,t])}function g(e){return i("subFeed",[e])}function v(e){return i("subEvent",[e])}function f(){return o("activateSub",[])}function N(){return o("deactivateSub",[])}function p(){return o("close",[])}function T(e,t){return o("setRelays",[e,t])}function O(e){a.postMessage({name:"setPort"},[e.port2])}function S(e,t){return o("publish",[e,t])}a.onmessage=e=>{var t,n;let{id:r,success:a,error:o,data:i}="string"===typeof e.data?JSON.parse(e.data):e.data;if(!a)return s[r].reject(new Error(r+":"+o)),void delete s[r];null===(t=s[r])||void 0===t||null===(n=t.resolve)||void 0===n||n.call(t,i),delete s[r]};var x,$=n(67694),A=n(39298),k=n.n(A),y=n(6896),R=n(62391),j=n(89033);self.process={env:{}};var h=new MessageChannel;O(h);let m=h.port1;m.onmessage=e=>{switch(e.data.type){case"events":Y(e.data.events);break;case"notice":self.postMessage({notice:{message:e.data.notice,relay:e.data.relay}});break;default:J(e.data);break}},null!==(x=indexedDB)&&void 0!==x&&x.databases&&indexedDB.databases().then((e=>{if(!(e.length<=1))for(let t of e)t.name.includes("_pouch_nostr-events")&&indexedDB.deleteDatabase(t.name)}));let I="idb",M=2e3,F=8192;const D="events.absurd-sql",C=`/nostr/${D}`;let w=null,L=new R.Z((()=>{console.error("Unable to write!")}));var U=null;function J(e){console.log(e)}async function P(){if(null==w){w=await k()({locateFile:()=>j});let e=new y.v(w.FS,L);w.register_for_idb(e),"undefined"===typeof SharedArrayBuffer&&J("<code>SharedArrayBuffer</code> is not available in your browser. Falling back."),w.FS.mkdir("/nostr"),w.FS.mount(e,{},"/nostr")}if("undefined"===typeof SharedArrayBuffer){let e=w.FS.open(C,"a+");await e.node.contents.readIfFallback(),w.FS.close(e)}U=new w.Database(C,{filename:!0}),U.run(`\n    PRAGMA cache_size=-${M};\n    PRAGMA journal_mode=MEMORY;\n    PRAGMA page_size=${F};\n    VACUUM;\n  `),J(`Opened ${D} (${I}) cache size: ${M}`),B(U)}function W(e){e=JSON.parse(e);for(let n in K)try{let t=K[n].callback;(0,$.ex)(K[n].filter,e)&&t&&t(e)}catch(t){console.log("error",t,n,K)}}function H(e){e=JSON.parse(e);for(let n in K)if("dbStreamEvent"===n.split(" ")[0]&&1===K[n].filter.ids.length)try{let t=K[n].callback;(0,$.ex)(K[n].filter,e)&&t&&t(e)}catch(t){console.log("error",t,n,K)}}function B(e,t=console.log){console.log("creating tables and indexes",e),e.create_function("handleInsertedEvent",(e=>{W(e)})),e.create_function("handleUpdatedEvent",(e=>{H(e)})),e.exec("\n    BEGIN TRANSACTION;\n    CREATE TABLE IF NOT EXISTS nostr (\n      id TEXT PRIMARY KEY,\n      event TEXT NOT NULL\n    );\n    CREATE INDEX IF NOT EXISTS idx_kind_created_at ON nostr (json_extract(event,'$.kind'), json_extract(event,'$.created_at') DESC);\n    CREATE INDEX IF NOT EXISTS idx_kind_pubkey_created_at ON nostr (json_extract(event,'$.kind'), json_extract(event,'$.pubkey'), json_extract(event,'$.created_at') DESC);\n\n    CREATE TABLE IF NOT EXISTS idx_kind_tag_created_at (\n      kind INTEGER NOT NULL,\n      tag TEXT NOT NULL,\n      created_at INTEGER NOT NULL,\n      id TEXT NOT NULL,\n      pubkey TEXT NOT NULL,\n      PRIMARY KEY(kind, tag, created_at, id)\n      );\n    CREATE TRIGGER IF NOT EXISTS nostr_tags_after_insert AFTER INSERT ON nostr\n      WHEN json_array_length(json_extract(new.event,'$.tags')) > 0\n      BEGIN\n        INSERT OR IGNORE INTO idx_kind_tag_created_at (kind, tag, created_at, id, pubkey)\n        SELECT DISTINCT json_extract(new.event, '$.kind'),\n          lower(iif(\n            instr(substr(tag.value, instr(tag.value, ',') + 1), ','),\n            substr(tag.value, 1, instr(tag.value, ',') + instr(substr(tag.value, instr(tag.value, ',') + 1), ',') - 1)||']',\n            tag.value\n          )),\n          json_extract(new.event, '$.created_at'),\n          new.id,\n          json_extract(new.event, '$.pubkey')\n        FROM json_each(json_extract(new.event, '$.tags')) AS tag;\n      END;\n    CREATE TRIGGER IF NOT EXISTS nostr_tags_after_delete AFTER DELETE ON nostr\n      WHEN json_array_length(json_extract(old.event,'$.tags')) > 0\n      BEGIN\n        DELETE FROM idx_kind_tag_created_at\n        WHERE kind = json_extract(old.event,'$.kind') AND\n          tag in (\n            SELECT lower(iif(\n                instr(substr(tag.value, instr(tag.value, ',') + 1), ','),\n                substr(tag.value, 1, instr(tag.value, ',') + instr(substr(tag.value, instr(tag.value, ',') + 1), ',') - 1)||']',\n                tag.value\n              ))\n            FROM json_each(json_extract(old.event,'$.tags')) AS tag\n          ) AND\n          created_at = json_extract(old.event,'$.created_at') AND\n          id = old.id;\n      END;\n    CREATE TRIGGER IF NOT EXISTS nostr_after_insert AFTER INSERT ON nostr\n      BEGIN\n        SELECT handleInsertedEvent(new.event) AS '';\n      END;\n    CREATE TRIGGER IF NOT EXISTS nostr_after_update AFTER UPDATE ON nostr\n      BEGIN\n        SELECT handleUpdatedEvent(new.event) AS '';\n      END;\n    CREATE VIEW IF NOT EXISTS nostr_events AS\n      SELECT id,\n        json_extract(event,'$.pubkey') pubkey,\n        json_extract(event,'$.created_at') created_at,\n        json_extract(event,'$.kind') kind,\n        json_extract(event,'$.tags') tags,\n        json_extract(event,'$.content') content,\n        json_extract(event,'$.seen_on') seen_on,\n        json_extract(event,'$.first_seen') first_seen,\n        json_extract(event,'$.last_updated') last_updated\n        FROM nostr;\n    CREATE VIEW IF NOT EXISTS nostr_users AS\n      SELECT json_extract(event,'$.pubkey') pubkey,\n        json_extract(json_extract(event,'$.content'),'$.name') name,\n        json_extract(json_extract(event,'$.content'),'$.picture') picture,\n        json_extract(json_extract(event,'$.content'),'$.about') about,\n        json_extract(json_extract(event,'$.content'),'$.nip05') nip05,\n        CASE (ROW_NUMBER() OVER (\n            PARTITION BY json_extract(event,'$.pubkey')\n            ORDER BY json_extract(event,'$.created_at') DESC\n          ))\n          WHEN 1 THEN 1\n          ELSE 0\n          END is_current,\n        json_extract(event,'$.created_at') created_at,\n        json_extract(event,'$.seen_on') seen_on\n      FROM nostr\n      WHERE json_extract(event,'$.kind') = 0;\n    COMMIT;"),t("Done")}function G(e){let t=U.prepare(e),n=[];while(t.step())n.push(t.getAsObject());return t.free(),n}function X(){U&&(J("Closed db"),U.close(),U=null)}function Y(e,t=console.log,n=console.log){if(!U)return;if(!q)return;if(Q)return;Q=!0;let r=Date.now();console.debug(`saving ${e.length} events...`),U.exec("BEGIN TRANSACTION;\n  ");let a=U.prepare("\n  INSERT INTO nostr (id, event)\n    VALUES(?, ?)\n    ON CONFLICT(id) DO UPDATE SET\n    event=json_set(\n      event,\n      '$.seen_on',json_insert(json_extract(event,'$.seen_on'),'$[#]',json_extract(excluded.event,'$.seen_on[0]')),\n      '$.last_updated',json_extract(excluded.event,'$.last_updated')\n    )\n    WHERE INSTR(json_extract(event,'$.seen_on'), json_extract(excluded.event,'$.seen_on[0]')) = 0;\n    ");for(let o=0;o<e.length;o++){let t=e[o].event;if(t.created_at>Math.round(Date.now()/1e3))continue;let n=e[o].relay;t.first_seen=Math.round(Date.now()/1e3),t.last_updated=Math.round(Date.now()/1e3),t.seen_on=[],n&&t.seen_on.push(n),t.tags=t.tags.map((e=>e.map((e=>e.toLowerCase())))),a.run([t.id,JSON.stringify(t)])}U.exec("COMMIT"),a.free();let s=Date.now()-r;return console.debug("Done! Took: "+s+` for ${e.length} events`),Q=!1,e}function V(e){var t;null!==(t=K[e])&&void 0!==t&&t.sub&&K[e].sub.cancel(),delete K[e]}const z={async destroyStreams(){return console.log("destroyStreams"),X(),p(),self.close(),!0},dbErase(){X();let e=!0;try{w.FS.stat(C)}catch(t){e=!1}e&&w.FS.unlink(C)},dbSave(e){let t=[{event:e}];return Y(t),e},dbStreamFeed(e,t){let n=G(`\n      SELECT event\n      FROM nostr\n      WHERE json_extract(event,'$.kind') IN (1, 2)\n        AND json_extract(event,'$.created_at') >= ${e}\n    `);return n.length&&n.forEach((e=>t(JSON.parse(e.event)))),{filter:{kinds:[1,2],since:e},callback:t,subName:"subFeed",subArgs:[e]}},dbFeed(e){let t=G(`\n      SELECT event\n      FROM nostr\n      WHERE json_extract(event,'$.kind') IN (1, 2)\n        AND json_extract(event,'$.created_at') >= ${e}\n    `);return t.map((e=>JSON.parse(e.event)))},streamFeed(e,t){return{filter:{kinds:[1,2],since:e},callback:t,subName:"subFeed",subArgs:[e]}},dbChats(e){let t=G(`\n      SELECT peer, MAX(last_message) last_message\n      FROM (\n        SELECT pubkey AS peer,\n          MAX(created_at) last_message\n        FROM idx_kind_tag_created_at\n        WHERE kind = 4\n          AND trim(substr(tag, 2, instr(tag, ',') - 2), '"') = 'p'\n          AND trim(rtrim(substr(tag, instr(tag, ',') + 1), ']'), '"') = '${e}'\n        GROUP BY tag, pubkey\n\n        UNION ALL\n\n        SELECT trim(rtrim(substr(tag, instr(tag, ',') + 1), ']'), '"') AS peer,\n          MAX(created_at) last_message\n        FROM idx_kind_tag_created_at\n        WHERE kind = 4\n          AND trim(substr(tag, 2, instr(tag, ',') - 2), '"') = 'p'\n          AND pubkey = '${e}'\n        GROUP BY tag, pubkey\n      )\n      GROUP BY peer\n    `);return t.sort(((e,t)=>t.last_message-e.last_message)).map((e=>({peer:e.peer,lastMessage:e.last_message})))},dbMessages(e,t,n,r){console.log("dbMessages until:",r);let a=G(`\n      SELECT n.event\n      FROM idx_kind_tag_created_at idx\n      LEFT JOIN nostr n ON idx.id = n.id\n      WHERE idx.kind = 4 AND\n        ((idx.tag = '["p","${e}"]' AND idx.pubkey = '${t}') OR\n        (idx.tag = '["p","${t}"]' AND idx.pubkey = '${e}')) AND\n        idx.created_at <= ${r}\n      ORDER BY idx.created_at DESC\n      LIMIT ${n}\n    `),s=a.map((e=>JSON.parse(e.event))).reverse().reduce(((e,t)=>{if(!e.length)return[t];let n=e[e.length-1];return n.pubkey===t.pubkey&&n.created_at+120>=t.created_at?(n.appended=n.appended||[],n.appended.push(t)):e.push(t),e}),[]);return s},streamMessages(e){return{filter:{kinds:[4]},callback:e}},dbEvent(e){let t=G(`\n      SELECT event\n      FROM nostr\n      WHERE id = '${e}'\n    `);return JSON.parse(t[0].event)},dbStreamEvent(e,t,n){let r=Array.isArray(e)?e:[e],a=`(\n      ${r.map((e=>`'${e}'`)).join(",")}\n    )`,s=G(`\n      SELECT event\n      FROM nostr\n      WHERE id IN ${a}\n    `);return s.length&&s.forEach((e=>n(JSON.parse(e.event)))),1!==s.length||1!==r.length||t?{filter:{ids:r},callback:n,subName:"subEvent",subArgs:[r]}:{filter:{ids:r},callback:n}},dbMentions(e,t,n){let r=G(`\n      SELECT n.event\n      FROM idx_kind_tag_created_at idx\n      LEFT JOIN nostr n ON idx.id = n.id\n      WHERE idx.kind = 1 AND\n        idx.tag = '["p","${e}"]' AND\n        idx.created_at <= ${n}\n      ORDER BY idx.created_at DESC\n      LIMIT ${t}\n    `);return r.map((e=>JSON.parse(e.event)))},streamMentions(e,t){return{filter:{kinds:[1],"#p":[e]},callback:t}},dbUnreadMentionsCount(e,t){let n=G(`\n      SELECT COUNT(*) count\n      FROM idx_kind_tag_created_at\n      WHERE kind = 1 AND\n        tag = '["p","${e}"]' AND\n        created_at >= ${t}\n    `);return n[0].count},dbUnreadMessagesCount(e,t,n){let r=G(`\n      SELECT COUNT(*) count\n      FROM nostr\n      WHERE json_extract(event,'$.kind') = 4 AND\n        json_extract(event,'$.pubkey') = '${t}' AND\n        json_extract(event,'$.created_at') >= ${n} AND\n        instr(json_extract(event,'$.tags'),'["p","${e}"')\n    `);return r[0].count},dbUserProfile(e){let t=G(`\n      SELECT event\n      FROM nostr\n      WHERE json_extract(event,'$.kind') = 0 AND\n        json_extract(event,'$.pubkey') = '${e}'\n      LIMIT 1\n    `);return t.length?JSON.parse(t[0].event):null},dbUserFollows(e){let t=G(`\n      SELECT event\n      FROM nostr\n      WHERE json_extract(event,'$.kind') = 3 AND\n        json_extract(event,'$.pubkey') = '${e}'\n      LIMIT 1\n    `);return t.length?JSON.parse(t[0].event):null},dbUserNotes(e,t,n){let r=G(`\n      SELECT event\n      FROM nostr\n      WHERE json_extract(event,'$.kind') = 1 AND\n        json_extract(event,'$.pubkey') = '${e}' AND\n        json_extract(event,'$.created_at') <= ${t}\n      LIMIT ${n}\n    `);return r.map((e=>JSON.parse(e.event)))},streamUser(e,t){return{filter:{kinds:[0,1,2,3,4],authors:[e]},callback:t,subName:"subUser",subArgs:[e]}},streamUserNotes(e,t){return{filter:{kinds:[1],authors:[e]},callback:t,subName:"subUserNotes",subArgs:[e]}},dbStreamUserProfile(e,t){let n=Array.isArray(e)?e:[e],r=`(\n      ${n.map((e=>`'["p","${e}"]'`)).join(",")}\n    )`,a=G(`\n      SELECT event\n      FROM nostr\n      WHERE json_extract(event,'$.kind') = 0 AND\n        json_extract(event,'$.pubkey') IN ${r}\n    `);return a.length&&a.forEach((e=>t(JSON.parse(e.event)))),{filter:{kinds:[0],authors:n},callback:t,subName:"subUserProfile",subArgs:[n]}},streamUserProfile(e,t){let n=Array.isArray(e)?e:[e];return{filter:{kinds:[0],authors:n},callback:t,subName:"subUserProfile",subArgs:[n]}},streamUserFollows(e,t){let n=Array.isArray(e)?e:[e];return{filter:{kinds:[3],authors:n},callback:t,subName:"subUserFollows",subArgs:[n]}},dbStreamUserFollows(e,t){let n=Array.isArray(e)?e:[e],r=G(`\n      SELECT event\n      FROM nostr\n      WHERE json_extract(event,'$.kind') = 3 AND\n        json_extract(event,'$.pubkey') IN (${JSON.stringify(...n)})\n    `);return r.length&&r.forEach((e=>t(JSON.parse(e.event)))),{filter:{kinds:[3],authors:n},callback:t,subName:"subUserFollows",subArgs:[n]}},dbStreamUserFollowers(e,t){let n=Array.isArray(e)?e:[e],r=`(\n      ${n.map((e=>`'["p","${e}"]'`)).join(",")}\n    )`,a=G(`\n      SELECT n.event\n      FROM idx_kind_tag_created_at idx\n      LEFT JOIN nostr n ON idx.id = n.id\n      WHERE json_extract(event,'$.kind') = 3 AND\n        idx.tag IN ${r}\n    `);return a.length&&a.forEach((e=>t(JSON.parse(e.event)))),{filter:{kinds:[3],"#p":n},callback:t,subName:"subUserFollowers",subArgs:[n]}},streamUserTags(e,t){let n=Array.isArray(e)?e:[e];return{filter:{kinds:[1,3,4],"#p":n},callback:t,subName:"subUserTags",subArgs:[n]}},dbStreamTagKind(e,t,n,r){let a=Array.isArray(t)?t:[t],s=Array.isArray(n)?n:[n],o=`#${e}`,i=`(\n      ${a.map((t=>`'["${e}","${t}"]'`)).join(",")}\n    )`,l=G(`\n      SELECT n.event\n      FROM idx_kind_tag_created_at idx\n      LEFT JOIN nostr n ON idx.id = n.id\n      WHERE idx.kind IN (${JSON.stringify(...s)}) AND\n        idx.tag IN ${i}\n    `);return l.length&&l.forEach((e=>r(JSON.parse(e.event)))),{filter:{[o]:a,kinds:s},callback:r,subName:"subTag",subArgs:[e,a]}},streamTag(e,t,n){let r=Array.isArray(t)?t:[t];return{filter:{[e]:r},callback:n,subName:"subTag",subArgs:[e,r]}},prune(e,t){let n=Math.round(Date.now()/1e3)-864e3,r=`("${t.join('","')}")`,a=G(`\n      DELETE\n      FROM nostr\n      WHERE json_extract(event,'$.kind') NOT IN (0,1,2,3,4,5) OR\n        (json_extract(event,'$.kind') IN (1,2) AND\n        json_extract(event,'$.created_at') <= ${n} AND\n        json_extract(event,'$.last_updated') <= ${n} AND\n        json_extract(event,'$.pubkey') NOT IN ${r} AND\n        NOT instr(json_extract(event,'$.tags'), '${e}'))\n        `);return a},dbQuery(e){return G(e)},setRelays(e,t){T(e,t)},publish(e,t){return console.log(e,t),S(e,t)},async activateSub(){if(q=!0,null===U)try{await P()}catch(e){console.log("dbInit error",U,e)}return self.onmessage=te,Z&&Z.length&&Z.forEach((async e=>await te(e))),Z=null,await f()},deactivateSub(){q=!1,Z=[],self.onmessage=ee,N();let e=setInterval((()=>{if(!Q){X();let t=new BroadcastChannel("astral");t.postMessage({type:"done"}),clearInterval(e)}}),50)}};var K={};let q=!0,Q=!1;var Z=[];async function ee(e){let{name:t,id:n}="string"===typeof e.data?JSON.parse(e.data):e.data;if("activateSub"===t){var r={id:n};try{let e=await z[t]();r.success=!0,r.data=e}catch(a){r.success=!1,r.error=a}self.postMessage(JSON.stringify(r))}else Z.push(e)}async function te(e){let{name:t,args:n,id:a,stream:s,cancel:o}="string"===typeof e.data?JSON.parse(e.data):e.data;if(o)V(a);else if(s){let e=z[t](...n,(e=>{self.postMessage({id:a,data:e,stream:!0})}));K[a]&&K[a].sub?(e.sub=K[a].sub,e.sub.update(...e.subArgs)):e.subName&&e.subArgs&&(e.sub=r[e.subName](...e.subArgs)),K[a]=e}else{var i={id:a};try{let e=z[t](...n);i.success=!0,i.data=e}catch(l){i.success=!1,i.error=l}self.postMessage(JSON.stringify(i))}}async function ne(){self.onmessage=ee,null===U&&await P(),self.onmessage=te,Z.forEach((e=>te(e))),Z=null}ne()},52074:()=>{},88994:()=>{},79021:()=>{}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var s=t[r]={id:r,loaded:!1,exports:{}};return e[r].call(s.exports,s,s.exports,n),s.loaded=!0,s.exports}n.m=e,n.x=()=>{var e=n.O(void 0,[736,64],(()=>n(37302)));return e=n.O(e),e},(()=>{var e=[];n.O=(t,r,a,s)=>{if(!r){var o=1/0;for(c=0;c<e.length;c++){for(var[r,a,s]=e[c],i=!0,l=0;l<r.length;l++)(!1&s||o>=s)&&Object.keys(n.O).every((e=>n.O[e](r[l])))?r.splice(l--,1):(i=!1,s<o&&(o=s));if(i){e.splice(c--,1);var d=a();void 0!==d&&(t=d)}}return t}s=s||0;for(var c=e.length;c>0&&e[c-1][2]>s;c--)e[c]=e[c-1];e[c]=[r,a,s]}})(),(()=>{n.n=e=>{var t=e&&e.__esModule?()=>e["default"]:()=>e;return n.d(t,{a:t}),t}})(),(()=>{var e,t=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__;n.t=function(r,a){if(1&a&&(r=this(r)),8&a)return r;if("object"===typeof r&&r){if(4&a&&r.__esModule)return r;if(16&a&&"function"===typeof r.then)return r}var s=Object.create(null);n.r(s);var o={};e=e||[null,t({}),t([]),t(t)];for(var i=2&a&&r;"object"==typeof i&&!~e.indexOf(i);i=t(i))Object.getOwnPropertyNames(i).forEach((e=>o[e]=()=>r[e]));return o["default"]=()=>r,n.d(s,o),s}})(),(()=>{n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})}})(),(()=>{n.f={},n.e=e=>Promise.all(Object.keys(n.f).reduce(((t,r)=>(n.f[r](e,t),t)),[]))})(),(()=>{n.u=e=>176===e?"js/176.daf9760e.js":"js/"+{64:"chunk-common",736:"vendor"}[e]+"."+{64:"2d076079",736:"7252949d"}[e]+".js"})(),(()=>{n.miniCssF=e=>"css/vendor.af6b9db3.css"})(),(()=>{n.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}()})(),(()=>{n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)})(),(()=>{n.r=e=>{"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}})(),(()=>{n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e)})(),(()=>{n.j=426})(),(()=>{n.p="/astral/"})(),(()=>{n.b=self.location+"/../../";var e={426:1},t=t=>{var[r,s,o]=t;for(var i in s)n.o(s,i)&&(n.m[i]=s[i]);o&&o(n);while(r.length)e[r.pop()]=1;a(t)};n.f.i=(t,r)=>{e[t]||importScripts(n.p+n.u(t))};var r=globalThis["webpackChunkastral"]=globalThis["webpackChunkastral"]||[],a=r.push.bind(r);r.push=t})(),(()=>{var e=n.x;n.x=()=>Promise.all([n.e(736),n.e(64)]).then(e)})();n.x()})();